# script to build snum.pace
# run the command on the next line in this directory to build
# pacedn "run snum-build.pacednscript"

compile snum.pace

attribute Int8    document "Provides a type and arithmetic operations for signed 8-bit integers."
attribute UInt8   document "Provides a type and arithmetic operations for unsigned 8-bit integers."
attribute Int16   document "Provides a type and arithmetic operations for signed 16-bit integers."
attribute UInt16  document "Provides a type and arithmetic operations for unsigned 16-bit integers."
attribute Int32   document "Provides a type and arithmetic operations for signed 32-bit integers."
attribute UInt32  document "Provides a type and arithmetic operations for unsigned 32-bit integers."
attribute Int64   document "Provides a type and arithmetic operations for signed 64-bit integers."
attribute UInt64  document "Provides a type and arithmetic operations for unsigned 64-bit integers."
attribute Float32 document "Provides a type and arithmetic operations for 32-bit floating point numbers."
attribute Float64 document "Provides a type and arithmetic operations for 64-bit floating point numbers."

attribute Int8    size 1
attribute UInt8   size 1
attribute Int16   size 2
attribute UInt16  size 2
attribute Int32   size 4
attribute UInt32  size 4
attribute Int64   size 8
attribute Float32 size 4
attribute Float64 size 8

attribute Int8.Equals    javascriptvalue "(x,y)=>x==y"
attribute UInt8.Equals   javascriptvalue "(x,y)=>x==y"
attribute Int16.Equals   javascriptvalue "(x,y)=>x==y"
attribute UInt16.Equals  javascriptvalue "(x,y)=>x==y"
attribute Int32.Equals   javascriptvalue "(x,y)=>x==y"
attribute UInt32.Equals  javascriptvalue "(x,y)=>x==y"
attribute Int64.Equals   javascriptvalue "i64_equals"
attribute UInt64.Equals  javascriptvalue "i64_equals"
attribute Float32.Equals javascriptvalue "(x,y)=>x==y"
attribute Float64.Equals javascriptvalue "(x,y)=>x==y"

attribute Int8.LessThan    javascriptvalue "(x,y)=>x<y"
attribute UInt8.LessThan   javascriptvalue "(x,y)=>x<y"
attribute Int16.LessThan   javascriptvalue "(x,y)=>x<y"
attribute UInt16.LessThan  javascriptvalue "(x,y)=>x<y"
attribute Int32.LessThan   javascriptvalue "(x,y)=>x<y"
attribute UInt32.LessThan  javascriptvalue "(x,y)=>x<y"
attribute Int64.LessThan   javascriptvalue "i64_signed_lessthan"
attribute UInt64.LessThan  javascriptvalue "i64_unsigned_lessthan"
attribute Float32.LessThan javascriptvalue "(x,y)=>x<y"
attribute Float64.LessThan javascriptvalue "(x,y)=>x<y"

attribute Int8.MoreThan    javascriptvalue "(x,y)=>x>y"
attribute UInt8.MoreThan   javascriptvalue "(x,y)=>x>y"
attribute Int16.MoreThan   javascriptvalue "(x,y)=>x>y"
attribute UInt16.MoreThan  javascriptvalue "(x,y)=>x>y"
attribute Int32.MoreThan   javascriptvalue "(x,y)=>x>y"
attribute UInt32.MoreThan  javascriptvalue "(x,y)=>x>y"
attribute Int64.MoreThan   javascriptvalue "i64_signed_morethan"
attribute UInt64.MoreThan  javascriptvalue "i64_unsigned_morethan"
attribute Float32.MoreThan javascriptvalue "(x,y)=>x>y"
attribute Float64.MoreThan javascriptvalue "(x,y)=>x>y"

attribute Int8.Add    javascriptvalue "(x,y)=>x+y"
attribute UInt8.Add   javascriptvalue "(x,y)=>x+y"
attribute Int16.Add   javascriptvalue "(x,y)=>x+y"
attribute UInt16.Add  javascriptvalue "(x,y)=>x+y"
attribute Int32.Add   javascriptvalue "(x,y)=>x+y"
attribute UInt32.Add  javascriptvalue "(x,y)=>x+y"
attribute Int64.Add   javascriptvalue "i64_add"
attribute UInt64.Add  javascriptvalue "i64_add"
attribute Float32.Add javascriptvalue "(x,y)=>x+y"
attribute Float64.Add javascriptvalue "(x,y)=>x+y"

attribute Int8.Sub    javascriptvalue "(x,y)=>x-y"
attribute UInt8.Sub   javascriptvalue "(x,y)=>x-y"
attribute Int16.Sub   javascriptvalue "(x,y)=>x-y"
attribute UInt16.Sub  javascriptvalue "(x,y)=>x-y"
attribute Int32.Sub   javascriptvalue "(x,y)=>x-y"
attribute UInt32.Sub  javascriptvalue "(x,y)=>x-y"
attribute Int64.Sub   javascriptvalue "i64_sub"
attribute UInt64.Sub  javascriptvalue "i64_sub"
attribute Float32.Sub javascriptvalue "(x,y)=>x-y"
attribute Float64.Sub javascriptvalue "(x,y)=>x-y"

attribute Int8.Mul    javascriptvalue "(x,y)=>x*y"
attribute UInt8.Mul   javascriptvalue "(x,y)=>x*y"
attribute Int16.Mul   javascriptvalue "(x,y)=>x*y"
attribute UInt16.Mul  javascriptvalue "(x,y)=>x*y"
attribute Int32.Mul   javascriptvalue "(x,y)=>x*y"
attribute UInt32.Mul  javascriptvalue "(x,y)=>x*y"
attribute Int64.Mul   javascriptvalue "i64_signed_mul"
attribute UInt64.Mul  javascriptvalue "i64_unsigned_mul"
attribute Float32.Mul javascriptvalue "(x,y)=>x*y"
attribute Float64.Mul javascriptvalue "(x,y)=>x*y"

attribute Int8.Div    javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute UInt8.Div   javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute Int16.Div   javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute UInt16.Div  javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute Int32.Div   javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute UInt32.Div  javascriptvalue "(x,y)=>Math.floor(x/y)"
attribute Int64.Div   javascriptvalue "i64_div"
attribute UInt64.Div  javascriptvalue "i64_div"
attribute Float32.Div javascriptvalue "(x,y)=>x/y"
attribute Float64.Div javascriptvalue "(x,y)=>x/y"

attribute Int8.Mod    javascriptvalue "(x,y)=>x%y"
attribute UInt8.Mod   javascriptvalue "(x,y)=>x%y"
attribute Int16.Mod   javascriptvalue "(x,y)=>x%y"
attribute UInt16.Mod  javascriptvalue "(x,y)=>x%y"
attribute Int32.Mod   javascriptvalue "(x,y)=>x%y"
attribute UInt32.Mod  javascriptvalue "(x,y)=>x%y"
attribute Int64.Mod   javascriptvalue "i64_mod"
attribute UInt64.Mod  javascriptvalue "i64_mod"
attribute Float32.Mod javascriptvalue "(x,y)=>x%y"
attribute Float64.Mod javascriptvalue "(x,y)=>x%y"

attribute Int8.Pow    javascriptvalue "Math.pow"
attribute UInt8.Pow   javascriptvalue "Math.pow"
attribute Int16.Pow   javascriptvalue "Math.pow"
attribute UInt16.Pow  javascriptvalue "Math.pow"
attribute Int32.Pow   javascriptvalue "Math.pow"
attribute UInt32.Pow  javascriptvalue "Math.pow"
attribute Int64.Pow   javascriptvalue "i64_Pow"
attribute UInt64.Pow  javascriptvalue "i64_Pow"
attribute Float32.Pow javascriptvalue "Math.pow"
attribute Float64.Pow javascriptvalue "Math.pow"

attribute Int8.BitAnd    javascriptvalue "(x)=>x&y"
attribute UInt8.BitAnd   javascriptvalue "(x)=>x&y"
attribute Int16.BitAnd   javascriptvalue "(x)=>x&y"
attribute UInt16.BitAnd  javascriptvalue "(x)=>x&y"
attribute Int32.BitAnd   javascriptvalue "(x)=>x&y"
attribute UInt32.BitAnd  javascriptvalue "(x)=>x&y"
attribute Int64.BitAnd   javascriptvalue "i64_and"
attribute UInt64.BitAnd  javascriptvalue "i64_and"

attribute Int8.BitOr    javascriptvalue "(x)=>x|y"
attribute UInt8.BitOr   javascriptvalue "(x)=>x|y"
attribute Int16.BitOr   javascriptvalue "(x)=>x|y"
attribute UInt16.BitOr  javascriptvalue "(x)=>x|y"
attribute Int32.BitOr   javascriptvalue "(x)=>x|y"
attribute UInt32.BitOr  javascriptvalue "(x)=>x|y"
attribute Int64.BitOr   javascriptvalue "i64_or"
attribute UInt64.BitOr  javascriptvalue "i64_or"

attribute Int8.BitXor    javascriptvalue "(x)=>x^y"
attribute UInt8.BitXor   javascriptvalue "(x)=>x^y"
attribute Int16.BitXor   javascriptvalue "(x)=>x^y"
attribute UInt16.BitXor  javascriptvalue "(x)=>x^y"
attribute Int32.BitXor   javascriptvalue "(x)=>x^y"
attribute UInt32.BitXor  javascriptvalue "(x)=>x^y"
attribute Int64.BitXor   javascriptvalue "i64_xor"
attribute UInt64.BitXor  javascriptvalue "i64_xor"

attribute Int8.BitNot    javascriptvalue "(x)=>~x"
attribute UInt8.BitNot   javascriptvalue "(x)=>~x"
attribute Int16.BitNot   javascriptvalue "(x)=>~x"
attribute UInt16.BitNot  javascriptvalue "(x)=>~x"
attribute Int32.BitNot   javascriptvalue "(x)=>~x"
attribute UInt32.BitNot  javascriptvalue "(x)=>~x"
attribute Int64.BitNot   javascriptvalue "i64_not"
attribute UInt64.BitNot  javascriptvalue "i64_not"

attribute Int8.Negate    javascriptvalue "(x)=>-x"
attribute Int16.Negate   javascriptvalue "(x)=>-x"
attribute Int32.Negate   javascriptvalue "(x)=>-x"
attribute Int64.Negate   javascriptvalue "i64_negate"
attribute Float32.Negate javascriptvalue "(x)=>-x"
attribute Float64.Negate javascriptvalue "(x)=>-x"

attribute Float32.Exp   javascriptvalue "Math.exp"
attribute Float64.Div   javascriptvalue "Math.exp"
attribute Float32.Log   javascriptvalue "Math.log"
attribute Float64.Log   javascriptvalue "Math.log"
attribute Float32.Sin   javascriptvalue "Math.sin"
attribute Float64.Sin   javascriptvalue "Math.sin"
attribute Float32.Cos   javascriptvalue "Math.cos"
attribute Float64.Cos   javascriptvalue "Math.cos"
attribute Float32.Tan   javascriptvalue "Math.tan"
attribute Float64.Tan   javascriptvalue "Math.tan"
attribute Float32.Asin  javascriptvalue "Math.asin"
attribute Float64.Asin  javascriptvalue "Math.asin"
attribute Float32.Acos  javascriptvalue "Math.acos"
attribute Float64.Acos  javascriptvalue "Math.acos"
attribute Float32.Atan  javascriptvalue "Math.atan"
attribute Float64.Atan  javascriptvalue "Math.atan"
attribute Float32.Atan2 javascriptvalue "Math.atan2"
attribute Float64.Atan2 javascriptvalue "Math.atan2"
attribute Float32.Sinh  javascriptvalue "Math.sinh"
attribute Float64.Sinh  javascriptvalue "Math.sinh"
attribute Float32.Cosh  javascriptvalue "Math.cosh"
attribute Float64.Cosh  javascriptvalue "Math.cosh"
attribute Float32.Tanh  javascriptvalue "Math.tanh"
attribute Float64.Tanh  javascriptvalue "Math.tanh"

attribute UInt8.ToInt8     javascriptvalue "(x)=>x"
attribute Int16.ToInt8     javascriptvalue "(x)=>x"
attribute UInt16.ToInt8    javascriptvalue "(x)=>x"
attribute Int32.ToInt8     javascriptvalue "(x)=>x"
attribute UInt32.ToInt8    javascriptvalue "(x)=>x"
attribute Int64.ToInt8     javascriptvalue "(x)=>x"
attribute UInt64.ToInt8    javascriptvalue "(x)=>x"
attribute Float32.ToInt8   javascriptvalue "(x)=>x"
attribute Float64.ToInt8   javascriptvalue "(x)=>x"
attribute Int8.ToUInt8     javascriptvalue "(x)=>x"
attribute Int16.ToUInt8    javascriptvalue "(x)=>x"
attribute UInt16.ToUInt8   javascriptvalue "(x)=>x"
attribute Int32.ToUInt8    javascriptvalue "(x)=>x"
attribute UInt32.ToUInt8   javascriptvalue "(x)=>x"
attribute Int64.ToUInt8    javascriptvalue "(x)=>x"
attribute UInt64.ToUInt8   javascriptvalue "(x)=>x"
attribute Float32.ToUInt8  javascriptvalue "(x)=>x"
attribute Float64.ToUInt8  javascriptvalue "(x)=>x"
attribute Int8.ToInt16     javascriptvalue "(x)=>x"
attribute UInt8.ToInt16    javascriptvalue "(x)=>x"
attribute UInt16.ToInt16   javascriptvalue "(x)=>x"
attribute Int32.ToInt16    javascriptvalue "(x)=>x"
attribute UInt32.ToInt16   javascriptvalue "(x)=>x"
attribute Int64.ToInt16    javascriptvalue "(x)=>x"
attribute UInt64.ToInt16   javascriptvalue "(x)=>x"
attribute Float32.ToInt16  javascriptvalue "(x)=>x"
attribute Float64.ToInt16  javascriptvalue "(x)=>x"
attribute Int8.ToUInt16    javascriptvalue "(x)=>x"
attribute UInt8.ToUInt16   javascriptvalue "(x)=>x"
attribute Int16.ToUInt16   javascriptvalue "(x)=>x"
attribute Int32.ToUInt16   javascriptvalue "(x)=>x"
attribute UInt32.ToUInt16  javascriptvalue "(x)=>x"
attribute Int64.ToUInt16   javascriptvalue "(x)=>x"
attribute UInt64.ToUInt16  javascriptvalue "(x)=>x"
attribute Float32.ToUInt16 javascriptvalue "(x)=>x"
attribute Float64.ToUInt16 javascriptvalue "(x)=>x"
attribute Int8.ToInt32     javascriptvalue "(x)=>x"
attribute UInt8.ToInt32    javascriptvalue "(x)=>x"
attribute Int16.ToInt32    javascriptvalue "(x)=>x"
attribute UInt16.ToInt32   javascriptvalue "(x)=>x"
attribute UInt32.ToInt32   javascriptvalue "(x)=>x"
attribute Int64.ToInt32    javascriptvalue "(x)=>x"
attribute UInt64.ToInt32   javascriptvalue "(x)=>x"
attribute Float32.ToInt32  javascriptvalue "(x)=>x"
attribute Float64.ToInt32  javascriptvalue "(x)=>x"
attribute Int8.ToUInt32    javascriptvalue "(x)=>x"
attribute UInt8.ToUInt32   javascriptvalue "(x)=>x"
attribute Int16.ToUInt32   javascriptvalue "(x)=>x"
attribute UInt16.ToUInt32  javascriptvalue "(x)=>x"
attribute Int32.ToUInt32   javascriptvalue "(x)=>x"
attribute Int64.ToUInt32   javascriptvalue "(x)=>x"
attribute UInt64.ToUInt32  javascriptvalue "(x)=>x"
attribute Float32.ToUInt32 javascriptvalue "(x)=>x"
attribute Float64.ToUInt32 javascriptvalue "(x)=>x"
attribute Int8.ToInt64     javascriptvalue "(x)=>x"
attribute UInt8.ToInt64    javascriptvalue "(x)=>x"
attribute Int16.ToInt64    javascriptvalue "(x)=>x"
attribute UInt16.ToInt64   javascriptvalue "(x)=>x"
attribute Int32.ToInt64    javascriptvalue "(x)=>x"
attribute UInt32.ToInt64   javascriptvalue "(x)=>x"
attribute UInt64.ToInt64   javascriptvalue "(x)=>x"
attribute Float32.ToInt64  javascriptvalue "(x)=>x"
attribute Float64.ToInt64  javascriptvalue "(x)=>x"
attribute Int8.ToUInt64    javascriptvalue "(x)=>x"
attribute UInt8.ToUInt64   javascriptvalue "(x)=>x"
attribute Int16.ToUInt64   javascriptvalue "(x)=>x"
attribute UInt16.ToUInt64  javascriptvalue "(x)=>x"
attribute Int32.ToUInt64   javascriptvalue "(x)=>x"
attribute UInt32.ToUInt64  javascriptvalue "(x)=>x"
attribute Int64.ToUInt64   javascriptvalue "(x)=>x"
attribute Float32.ToUInt64 javascriptvalue "(x)=>x"
attribute Float64.ToUInt64 javascriptvalue "(x)=>x"

attribute Int32.BitsToFloat32  javascriptvalue "(x)=>(new Float32Array(Int32Array.of(x)))[0]"
attribute UInt32.BitsToFloat32 javascriptvalue "(x)=>(new Float32Array(Uint32Array.of(x)))[0]"
attribute Int64.BitsToFloat64  javascriptvalue "i64_bitstofloat64"
attribute UInt64.BitsToFloat64 javascriptvalue "i64_bitstofloat64"

attribute Int8.FromInteger    javascriptvalue "(x)=>parseInt(x,16)"
attribute UInt8.FromInteger   javascriptvalue "(x)=>parseInt(x,16)"
attribute Int16.FromInteger   javascriptvalue "(x)=>parseInt(x,16)"
attribute UInt16.FromInteger  javascriptvalue "(x)=>parseInt(x,16)"
attribute Int32.FromInteger   javascriptvalue "(x)=>parseInt(x,16)"
attribute UInt32.FromInteger  javascriptvalue "(x)=>parseInt(x,16)"
attribute Int64.FromInteger   javascriptvalue "i64_fromhexint"
attribute UInt64.FromInteger  javascriptvalue "i64_fromhexint"
attribute Float32.FromInteger javascriptvalue "(x)=>parseInt(x,16)"
attribute Float64.FromInteger javascriptvalue "(x)=>parseInt(x,16)"

attribute Float32.FromFractional javascriptvalue "(x)=>parseInt(x._member_Denominator,16)/parseInt(x._member_Numerator,16)"
attribute Float64.FromFractional javascriptvalue "(x)=>parseInt(x._member_Denominator,16)/parseInt(x._member_Numerator,16)"

attribute Float32.FromBits javascriptvalue "(x)=>i64_bitstofloat64(i64_fromhexint(x))"
attribute Float64.FromBits javascriptvalue "(x)=>i64_bitstofloat64(i64_fromhexint(x))"

export snum